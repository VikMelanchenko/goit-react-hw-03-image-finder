{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","services/Api.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/panda-dribble_4x.webp","components/ImageErrorView/ImageErrorView.jsx","components/FetchImages/FetchImages.jsx","App.js","index.js"],"names":["SearchForm","state","query","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","reset","className","this","type","placeholder","onChange","Component","Spinner","color","height","width","API","fetchImages","page","URL","fetch","then","response","ok","json","Promise","reject","Error","data","console","log","hits","Button","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","src","alt","createPortal","ImageGalleryItem","showModal","toggleModal","largeImageURL","ImageGallery","images","map","element","id","webformatURL","tags","ImageFallbackView","message","role","style","textAlign","errorImage","ImageGalleryInfo","status","fetchImagesGallery","nextQuery","newImages","prevState","length","catch","onLoadMore","prevProps","prevQuery","scrollTo","top","documentElement","scrollHeight","behavior","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.abff1166.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport '../css/styles.css';\n\nexport default class SearchForm extends Component {\n  state = {\n    query: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  // добавление значения в input\n  handleChange = (e) => {\n    this.setState({ query: e.currentTarget.value.toLowerCase() });\n  };\n\n  // сабмит формы\n  handleSubmit = (e) => {\n    // страница не перезагружается\n    e.preventDefault();\n\n    //   проверка на пусту строку и вызов алерта\n    if (this.state.query.trim() === '') {\n      toast.error('Please enter your search item');\n    }\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: '' });\n\n    this.reset();\n  };\n\n  // очистка input\n  reset = () => {\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            // autocomplete=\"off\"\n            // autofocus\n            value={this.state.query}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class Spinner extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        className=\"spinner\"\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n      />\n    );\n  }\n}\n","function fetchImages(query, page) {\n  const API_KEY = '19112530-d5af3423794dd47ca2e19dee1';\n  const URL = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(URL)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Something went wrong`));\n    })\n    .then((data) => {\n      console.log(data);\n      return data.hits;\n    });\n}\n\nconst API = { fetchImages };\nexport default API;\n","import { Component } from 'react';\nimport '../css/styles.css';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"load__button\">\n        <button className=\"Button\" type=\"button\" onClick={this.props.onClick}>\n          Load More\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport '../css/styles.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    src: PropTypes.string,\n    alt: PropTypes.string,\n  };\n\n  componentDidMount() {\n    console.log('Modal componentDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    console.log('Modal componentWillUnmount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = (event) => {\n    // console.log('Кликнули в бекдроп');\n\n    // console.log('currentTarget: ', event.currentTarget);\n    // console.log('target: ', event.target);\n\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt}></img>\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n","import { Component } from 'react';\nimport Modal from '../Modal/Modal';\nimport PropTypes from 'prop-types';\n\nimport '../css/styles.css';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    showModal: null,\n  };\n\n  static propTypes = {\n    src: PropTypes.string,\n    alt: PropTypes.string,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { src, alt, largeImageURL } = this.props;\n    const { showModal } = this.state;\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItem-image\"\n          onClick={this.toggleModal}\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageURL} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nimport '../css/styles.css';\n\nconst ImageGallery = ({ images }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images.map((element, id) => (\n          <ImageGalleryItem\n            key={element.id}\n            src={element.webformatURL}\n            largeImageURL={element.largeImageURL}\n            alt={element.tags}\n            id={element.id}\n          />\n        ))}\n      </ul>\n      {/* <div className=\"load_more\">\n        {images.length !== 0 && <Button loadMore={loadMore} />}\n      </div> */}\n    </>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","export default __webpack_public_path__ + \"static/media/panda-dribble_4x.13bd5aac.webp\";","import errorImage from '../panda-dribble_4x.webp';\nimport '../css/styles.css';\n\nexport default function ImageFallbackView({ message }) {\n  return (\n    <div role=\"alert\" style={{ textAlign: 'center' }}>\n      {message}\n      <img\n        src={errorImage}\n        width=\"100%\"\n        alt=\"crying girl\"\n        style={{ textAlign: 'center' }}\n      />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Spinner from '../Loader/Loader';\nimport API from '../../services/Api';\nimport Button from '../Button/Button';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport ImageErrorView from '../ImageErrorView/ImageErrorView';\nimport PropTypes from 'prop-types';\nimport '../css/styles.css';\n\nexport default class ImageGalleryInfo extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    error: null,\n    page: 1,\n  };\n\n  static propTypes = {\n    query: PropTypes.string,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.query;\n    const nextQuery = this.props.query;\n\n    // обновляет поиск при вводенового значения в input + обновляет поиск с первой страницы\n    if (prevQuery !== nextQuery) {\n      this.setState({ page: 1, images: [] });\n    }\n\n    // статус ожидает + спиннер\n    if (prevQuery !== nextQuery) {\n      this.setState({ status: 'pending' });\n\n      this.fetchImagesGallery();\n    }\n\n    // scroll вниз\n    if (prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  fetchImagesGallery = () => {\n    const nextQuery = this.props.query;\n\n    API.fetchImages(nextQuery, this.state.page)\n      .then((newImages) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...newImages],\n          page: this.state.page + 1,\n          status: 'resolved',\n        }));\n        if (newImages.length === 0) {\n          throw new Error('Hmm...Nothing here. Try another search.');\n        }\n      })\n      .catch((error) => this.setState({ error, status: 'rejected' }));\n  };\n\n  onLoadMore = () => {\n    this.fetchImagesGallery();\n  };\n\n  render() {\n    const { images, status, error } = this.state;\n    if (status === 'idle') {\n      return (\n        <div style={{ textAlign: 'center' }}> Please enter search item</div>\n      );\n    }\n\n    if (status === 'pending') {\n      return <Spinner />;\n    }\n\n    if (status === 'rejected') {\n      return <ImageErrorView message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery images={images} />\n          <Button onClick={this.onLoadMore} />\n        </>\n      );\n    }\n    //   return (\n    //     <div>\n    //       {error && <h1>{error.message}</h1>}\n    //       {loading && <Spinner className=\"spinner\" />}\n    //       {!query && <div> Please enter search item</div>}\n    //       {hits && <div>{hits}</div>}\n    //       <ImageGallery images={images} loadMore={OnLoadMore} />\n    //       {loadMoreButton && <Button onClick={this.onLoadMore} />}\n    //     </div>\n    //   );\n    // }\n  }\n}\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport FetchImages from './components/FetchImages/FetchImages';\n\nexport default class App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleFormSubmit = (query) => {\n    this.setState({ query });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ToastContainer autoClose={3000} />\n        <FetchImages query={query} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}